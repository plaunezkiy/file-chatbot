{"docstore/metadata": {"ae877082-1c2a-4c1d-a93f-eed8996408e7": {"doc_hash": "52140dd4ee93282302a513f7dec1f81d38f7318b9ce30d4a2ede12e46810421c"}, "866a65dc-ed06-40cd-8f1f-4c2ca70500f7": {"doc_hash": "d388f0f1f3d2cc318c4c318c5e68aabec3501218d4e159541df23e3f4ccde607", "ref_doc_id": "ae877082-1c2a-4c1d-a93f-eed8996408e7"}, "32b1f5c7-4be9-4150-a0f3-12e987198c06": {"doc_hash": "7e9c02cce087cb19e5e560ee6691effa4dbcf7d783d5a9b1c2ba5feb8c53b0c9", "ref_doc_id": "ae877082-1c2a-4c1d-a93f-eed8996408e7"}}, "docstore/data": {"866a65dc-ed06-40cd-8f1f-4c2ca70500f7": {"__data__": {"id_": "866a65dc-ed06-40cd-8f1f-4c2ca70500f7", "embedding": null, "metadata": {"page_id": "ef7ac290-d07a-43d6-b65d-f6f8c426913c"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ae877082-1c2a-4c1d-a93f-eed8996408e7", "node_type": "4", "metadata": {"page_id": "ef7ac290-d07a-43d6-b65d-f6f8c426913c"}, "hash": "52140dd4ee93282302a513f7dec1f81d38f7318b9ce30d4a2ede12e46810421c"}, "3": {"node_id": "32b1f5c7-4be9-4150-a0f3-12e987198c06", "node_type": "1", "metadata": {"page_id": "ef7ac290-d07a-43d6-b65d-f6f8c426913c"}, "hash": "7e9c02cce087cb19e5e560ee6691effa4dbcf7d783d5a9b1c2ba5feb8c53b0c9"}}, "hash": "d388f0f1f3d2cc318c4c318c5e68aabec3501218d4e159541df23e3f4ccde607", "text": "pp. 220-228\nThe Internet was originally conceive as a communication network robust enough to survive a military attack. For this reason, rather than basing comms on switches paths, it was designed to comm through sequences of \n[[Packet|data packets]]\n known as \npacket switching\n. A data packet is a finite-length set of bits, divided in two parts: a \nheader\n, specifying where the packet is going, and a \npayload\n, which is a bit of the actual information.\nNetwork topology\nA network's connection structure is knows as its \n[[Network Topology]]\n. Computers are ==host== nodes\nRouters are ==communication== nodes.\nPrivate network composed of computers in relatively close proximity is known as [[LAN]].\nToday, the Internet is refereed to as a Wide Area Network, or [[WAN]].\nThe Routers in [[WAN]]s are partitioned into clusters, which are called \nautonomous systems\n (ASs). Each system is controlled by a single organizational entity, which determines how [[Packet|packets]] will be routed.\nTypically, the routing is done using shortest paths. Routing between multiple ASs is determined by contractual agreements to avoid loops.\nInternet Protocol Layers\nThe architecture is modelled conceptually as partitioned into layers, which collectively are called the \n[[Internet Protocol Stack]]\n.\nEach layer provides a set of services and functionality guarantees for higher layers. To an extent, each layer does not depend on details or services from \nhigher\n levels.\nThe exact number of layers may vary, but is usually 5 or 7 depending on what source we consider as authoritative.\nFive Conceptual Layers for the Internet Communication\nCalled the TCP/IP model\n.\n[[Physical Layer]]\n\nThe task it to move the actual bits between the nodes of the network, on a [[Best Effort Basis]].\n[[Link Layer]]\n\nThe task is to transfer data between a pair of network nodes or between nodes in a [[LAN]] and to detect errors that occur on the physical layer. Deals with the logical aspects of sending information and how to find good routing paths in a LAN. Providers a grouping of bits into ordered records, called [[Frame|frames]]. Uses 48-bit addresses called \nmedia access control addresses\n (MAC addresses).\n[[Network Layer]] (AKA Internet Layer)\n\nThe task is to provide for the moving of packets between any two hosts, on a [[Best Effort Basis]]. Provides a way of individually addressing each host using a numerical label - IP address. The main protocol is the Internet Protocol, which is subdivided into IPv4 (32-bit address) and IPv6 (128-bit address).\n[[Transport Layer]]\n\nThe task is to support comms and connections between applications, based on IP addresses and [[Port|ports]]. The layer provides a protocol, the [[Transmission Control Protocol]] (TCP) and the [[User Datagram Protocol]] (UDP).\n[[Application Layer]]\n\nThe task is to provide protocols that support useful functions, based on services provided by the transport layer.\nExamples:\n\t[[HTTP]], which uses [[Transmission Control Protocol|TCP]] and supports web browsing\n\t[[DNS]] that uses [[User Datagram Protocol|UDP]] and supports the use of useful names for hosts instead of IP addresses\n\t[[SMTP]] and [[IMAP]], which use [[Transmission Control Protocol|TCP]] and support electronic mail\n\t[[SSL]] that uses [[Transmission Control Protocol|TCP]] and supports secure encrypted connections\n\t[[VoIP]], which uses [[User Datagram Protocol|UDP]] and supports Internet telephone messaging.\nThe Open Systems Interconnection (OSI) model differs slightly - it has 7 layers as the [[Application Layer]] is divided into a strict application layer, for host application-to-network processes, a presentation layer, for data representation, and session layer, for interhost communication.\nFor a given layer but the topmost, [[Packet]] payload stores a packet of the layer immediately above. This nesting is called [[Encapsulation]].\nThe IP stack provides a useful set of functions and abstractions that make the Internet possible, which, however, were designed during a time when it almost \nexclusively\n populated by people with no malicious intent. The layered model helps system designers build software that uses appropriate services and provides the right service guarantees with a level of abstraction.\n!", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "32b1f5c7-4be9-4150-a0f3-12e987198c06": {"__data__": {"id_": "32b1f5c7-4be9-4150-a0f3-12e987198c06", "embedding": null, "metadata": {"page_id": "ef7ac290-d07a-43d6-b65d-f6f8c426913c"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ae877082-1c2a-4c1d-a93f-eed8996408e7", "node_type": "4", "metadata": {"page_id": "ef7ac290-d07a-43d6-b65d-f6f8c426913c"}, "hash": "52140dd4ee93282302a513f7dec1f81d38f7318b9ce30d4a2ede12e46810421c"}, "2": {"node_id": "866a65dc-ed06-40cd-8f1f-4c2ca70500f7", "node_type": "1", "metadata": {"page_id": "ef7ac290-d07a-43d6-b65d-f6f8c426913c"}, "hash": "d388f0f1f3d2cc318c4c318c5e68aabec3501218d4e159541df23e3f4ccde607"}}, "hash": "7e9c02cce087cb19e5e560ee6691effa4dbcf7d783d5a9b1c2ba5feb8c53b0c9", "text": "![[Pasted image 20230930141741.png]]\nNetwork Security Issues\nConnecting computers, so they can exchange information brings a lot of benefits. But networking also allows for a number of attacks on computers and information.\nHow networking impact computer security goals:\nConfidentiality\nThere's no requirement that the contents of network packets be kept confidential. Protocols for each later don't encrypt any part of their data. The encryption has to be done \nexplicitly\n. The encryption could either be done at the [[Application Layer]] (as in the [[HTTPS]]) or by revising a lower-layer protocol to include encryption.\nIntegrity\nThe header and footer encapsulating [[Packet|packets]] have, at each layer, simple checksums to validate the integrity of data and/or header contents. These checksums are effective at detecting inconsistencies, but don't provide integrity in the computer security sense.\nAvailability\nThe Internet was designed to tolerate failures of routers and hosts. But the sheer size makes availability a challenge. To achieve availability at this scale, we need network application that can scale with increases in comm requests and/or block attacks.\nAssurance\nBy default, a [[Packet|packet]] is allowed to travel between any source and destination in a network. Thus, introducing permissions and policies controlling data flow require explicit additions (e.g. firewall rules)\nAuthenticity\nIn the [[Internet Protocol Stack|IP stack]] there's no notion of user identities. Data is exchanged between machines and processes, not people. Thus, if we want identities and allow for signatures, we must do so explicitly at the [[Application Layer]]\nAnonymity\nSince there's no default notion of identity of users, it has built-in anonymity.\npp. 230-231\nDealing with Collisions\nIn the event of a collision, each transmitting machine wait a random amount of time, usually in microseconds, and then retransmits in the hope of avoiding a second collision.\nIf other collisions occur, the process is repeated.\nThe [[Ethernet Protocol]] is designed so that eventually every machine will succeed in transmitting its [[Frame]].\nHubs and Switches\nThe simplest way to connect machines in a [[LAN]] is to use an Ethernet \nhub\n, which is a device that logically connect multiple devices together.\nHubs typically forward all [[Frame|frames]] to all attached devices. Thus, all machines connected to a hub must participate in the Ethernet collision resolution protocol.\nThe better way to connect machines in a LAN is to use an Ethernet [[Switch|switch]]. When devices are first connected, it acts like a hub, sending out frames to all connected machines. Over time, a switch learns the addresses of the connected machines. Given this information, a switch will then only forward each [[Frame|frame]] it receives along the cable it knows is connected to the destination for that frame.\nThe selectivity that comes from a switch learning the addresses reduces the possibilities for collisions and increases the effective speed of the network - its effective \nBandwidth.\npp. 240-241\nInternet Control Message Protocol\nThe ICMP is [[Network Layer]] protocol that is used by hosts to perform a number of basic testing and error notification tasks. ICMP is primarily used for network diagnostics. ICMP packets carry various types of messages, including:\nEcho request\n: Asks the destination to acknowledge the receipt of the packet.\nEcho response\n: Acknowledges the receipt of a packet in reply to echo request.\nTime exceeded\n: Error notification that a packet has expired\nDestination unreachable\n: Error notification that the packet could not be delivered.\nPing\nA utility that uses [[Internet Control Message Protocol|ICMP]] protocol to verify whether a particular host is receiving packets.\nTraceroute\nA utility that uses [[Internet Control Message Protocol|ICMP]] messages to determine the path a packet takes to reach another host. Does so by cleverly using [[TTL]] field in the IP header - sends a packet with a TTL of 1, then 2,3,4,5 and so on. An intermediate router discards the packet and replies to the sender with an ICMP \ntime exceeded\n message revealing itself.\n![[Pasted image 20230930151656.png]]", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"ae877082-1c2a-4c1d-a93f-eed8996408e7": {"node_ids": ["866a65dc-ed06-40cd-8f1f-4c2ca70500f7", "32b1f5c7-4be9-4150-a0f3-12e987198c06"], "metadata": {"page_id": "ef7ac290-d07a-43d6-b65d-f6f8c426913c"}}}}